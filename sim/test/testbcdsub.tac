; shlc SHLA compilation Sat Mar 11 11:47:43 2017
; this assumes a TAC with 10 bit word width
; mem locs 1-255 are local local or temporary vars
RESET:	JMP MAIN
STKPTR:	MEM 255
FRMPTR:	MEM 255
.=	256
#PRAGMA	read bcd.dat@heap
#PRAGMA	print z1[10],z2[10],res[10]
z1=	MEM 0*10
z2=	MEM 0*10
res=	MEM 0*10
d=	MEM 0
e=	MEM 0
x=	MEM 0
y=	MEM 0
u=	MEM 0
i=	MEM 0
readbcd:	MEM 0
	MOV #1 i
L00001:	MOV *DATPTR d
	ADD DATPTR #1 DATPTR
	CMP d #9
	JGT L00002
	SUB FRMPTR #0 16
	MOV *16 16
	ADD @16 i 16
	MOV d *16
	ADD i #1 18
	MOV @18 i
	JMP L00001
L00002:	SUB FRMPTR #0 19
	MOV *19 19
	ADD @19 #0 19
	SUB i #1 21
	MOV @21 *19
	MOV FRMPTR STKPTR
	JMP *readbcd
sumbcd:	MEM 0
	MOV #1 i
	MOV #0 u
	MOV #0 e
L00003:	SUB FRMPTR #0 22
	MOV *22 22
	ADD @22 i 22
	MOV *22 x
	SUB FRMPTR #0 23
	MOV *23 23
	ADD @23 #0 23
	CMP *23 i
	JEQ L00004
	JGT L00004
	MOV #0 x
	ADD e #1 25
	MOV @25 e
L00004:	SUB FRMPTR #1 26
	MOV *26 26
	ADD @26 i 26
	MOV *26 y
	SUB FRMPTR #1 27
	MOV *27 27
	ADD @27 #0 27
	CMP *27 i
	JEQ L00005
	JGT L00005
	MOV #0 y
	ADD e #1 29
	MOV @29 e
L00005:	CMP e #1
	JGT L00006
	ADD x y 16
	ADD @16 u 19
	MOV @19 d
	CMP d #9
	JEQ L00007
	JLE L00007
	MOV #1 u
	SUB d #10 21
	MOV @21 d
	JMP L00008
L00007:	MOV #0 u
L00008:	SUB FRMPTR #2 22
	MOV *22 22
	ADD @22 i 22
	MOV d *22
	ADD i #1 24
	MOV @24 i
	JMP L00003
L00006:	CMP u #0
	JEQ L00009
	JLE L00009
	SUB FRMPTR #2 25
	MOV *25 25
	ADD @25 i 25
	MOV u *25
	ADD i #1 27
	MOV @27 i
L00009:	SUB FRMPTR #2 28
	MOV *28 28
	ADD @28 #0 28
	SUB i #1 30
	MOV @30 *28
	MOV FRMPTR STKPTR
	JMP *sumbcd
MAIN:	MOV FRMPTR 31
	MOV STKPTR FRMPTR
	MOV #z1 *STKPTR
	SUB STKPTR #1 STKPTR
	MOV #10 *STKPTR
	SUB STKPTR #1 STKPTR
	JSR readbcd
	MOV FRMPTR 16
	MOV STKPTR FRMPTR
	MOV #z2 *STKPTR
	SUB STKPTR #1 STKPTR
	MOV #10 *STKPTR
	SUB STKPTR #1 STKPTR
	JSR readbcd
	MOV FRMPTR 17
	MOV STKPTR FRMPTR
	MOV #z1 *STKPTR
	SUB STKPTR #1 STKPTR
	MOV #z2 *STKPTR
	SUB STKPTR #1 STKPTR
	MOV #res *STKPTR
	SUB STKPTR #1 STKPTR
	JSR sumbcd
	HLT
HEAP:	MEM 0
