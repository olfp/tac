; shlc SHLA compilation Thu Mar  9 10:40:22 2017
; this assumes a TAC with 10 bit word width
; mem locs 1-255 are local local or temporary vars
RESET:	JMP MAIN
STKPTR:	MEM 255
FRMPTR:	MEM 255
.=	256
a=	MEM 0*10
b=	MEM 0*10
c=	MEM 0*10
d=	MEM 0
e=	MEM 0
x=	MEM 0
y=	MEM 0
u=	MEM 0
i=	MEM 0
MAIN:	MOV #1 i
L00001:	MOV *DATPTR d
	ADD DATPTR #1 DATPTR
	CMP d #9
	JGT L00002
	ADD #a i 10
	MOV d *10
	ADD i #1 12
	MOV @12 i
	JMP L00001
L00002:	ADD #a #0 13
	SUB i #1 15
	MOV @15 *13
	MOV #1 i
L00003:	MOV *DATPTR d
	ADD DATPTR #1 DATPTR
	CMP d #9
	JGT L00004
	ADD #b i 16
	MOV d *16
	ADD i #1 18
	MOV @18 i
	JMP L00003
L00004:	ADD #b #0 19
	SUB i #1 21
	MOV @21 *19
	MOV #1 i
	MOV #0 u
	MOV #0 e
L00005:	ADD #a i 22
	MOV *22 x
	ADD #a #0 23
	CMP *23 i
	JEQ L00006
	JGT L00006
	MOV #0 x
	ADD e #1 25
	MOV @25 e
L00006:	ADD #b i 26
	MOV *26 y
	ADD #b #0 27
	CMP *27 i
	JEQ L00007
	JGT L00007
	MOV #0 y
	ADD e #1 29
	MOV @29 e
L00007:	CMP e #1
	JGT L00008
	ADD x y 31
	ADD @31 u 33
	MOV @33 d
	CMP d #9
	JEQ L00009
	JLE L00009
	MOV #1 u
	SUB d #10 35
	MOV @35 d
	JMP L00010
L00009:	MOV #0 u
L00010:	ADD #c i 36
	MOV d *36
	ADD i #1 38
	MOV @38 i
	JMP L00005
L00008:	CMP u #0
	JEQ L00011
	JLE L00011
	ADD #c i 39
	MOV u *39
	ADD i #1 41
	MOV @41 i
L00011:	ADD #c #0 42
	SUB i #1 44
	MOV @44 *42
	HLT
HEAP:	MEM 0
